input 1 : 사용자가 입력한 글 다루기

Q. <span> 태그를 눌러도 모달창이 뜸?
클릭이벤트는 상위 html로 퍼짐 (이벤트 버블링)

(정보) state변경함수는 늦게 처리됨 전문용어로 비동기처리

1. input에 뭐 입력하고 발행버튼누르면
블로그에 글이 하나 추가되는 기능을 만들어보십시오.
      <button onClick= {() => {
                // 글제목변경.push(글제목)
                let copy = [...글제목];
                copy.push(입력값);
                글제목변경(copy);
      }}>글발행</button>

2. 글마다 옆에 삭제버튼 하나씩 만들어놓고 삭제버튼누르면 글이 없어지는 기능을 만들어보십시오.
              <button onClick={ () => {
                const copy = [...글제목];
                copy.splice(i, 1);
                글제목변경(copy);
              }}>삭제</button>

---

0:00 input 태그는 여러종류 있음 
1:50 input에 뭔가 입력시 코드실행하고 싶으면 
4:20 input에 입력한 값 가져오는 법
7:35 input에 입력한 값 어딘가에 저장해보자

오늘의 숙제 : 
하단참고 

리액트에서 유저가 입력한 input 데이터는 어떻게 처리하는지 알아봅시다.
실은 쌩자바스크립트 문법이랑 똑같습니다. 

<input> 태그 사용하기
유저의 입력을 받을 수 있는 박스를 생성하고 싶으면 
html에선 다음과 같은 태그들을 이용가능합니다.

<input type="text"/>
<input type="range"/>
<input type="date"/>
<input type="number"/>
<textarea></textarea>
<select></select>

이거 말고도 다양한 종류의 인풋 박스가 많으니 필요할 때 찾아쓰도록 합시다. 

<input>에 뭔가 입력시 코드를 실행하려면
유저가 <input>에 뭔가 입력시 코드를 실행해주고 싶을 때가 많습니다.
그러고 싶으면 onChange 아니면 onInput 이벤트핸들러를 부착하면 됩니다. 

<input onChange={()=>{ 실행할코드 }}/>
onChange, onInput은
<input>에 유저가 뭔가 입력할 때마다 안에 있는 코드를 실행해줍니다. 
진짜인지 console.log(1) 이런거 넣어서 테스트해봅시다. 

(참고)
이벤트 핸들러들은 매우 많습니다.
onMouseOver={ } 이건 이 요소에 마우스를 댔을 때 안의 코드를 실행해줍니다.
onScroll={ } 이건 이 요소를 스크롤했을 때 안의 코드를 실행해줍니다.
몇십개 있는데 원하는 이벤트가 있으면 찾아서 사용해봅시다. 

<input>에 입력한 값 가져오는 법
<input onChange={(e)=>{ console.log(e.target.value) }}/>
e라는 파라미터를 추가해주고 
e.target.value라고 적으면 현재 <input>에 입력된 값을 가져올 수 있습니다. 
콘솔창에 출력해보니 진짜 가져옵니다. 

이벤트핸들러에 들어가는 함수에 저렇게 파라미터 e를 추가하면
e는 이벤트 객체 이런 식으로 부르는데
현재 발생하는 이벤트와 관련한 유용한 기능들을 제공하는 일종의 변수입니다.  
(작명은 e 말고 자유롭게 해도 됩니다)

e.target 이러면 현재 이벤트가 발생한 곳을 알려주고
e.preventDefault() 이러면 이벤트 기본 동작을 막아주고
e.stopPropagation() 이러면 이벤트 버블링도 막아줍니다. 이거 쓰면 좋아요버튼 누를 때 모달창도 떠버리는 버그 해결가능

사용자가 input에 입력한 데이터 저장하기 
사용자가 input에 입력한 데이터는 state 아니면 변수에 저장해서 쓰는게 일반적입니다. 
그래야 편리하기 때문에 일단 저장부터 해봅시다.
state 배운 기념으로 state를 사용합시다. 

function App (){

  let [입력값, 입력값변경] = useState('');
  return (
    <input onChange={(e)=>{ 
      입력값변경(e.target.value) 
      console.log(입력값)
    }} />
  )
}

state를 하나 만들어주고 onChange될 때 마다 state에 e.target.value 넣으라고 코드를 짰습니다. 
state에 문자를 저장하고 싶은데 일단 기본값을 뭘 넣을지 모르겠으면 따옴표 2개만 치면 됩니다.
따옴표 2개는 빈문자를 뜻합니다. 
이제 입력값이라는 state를 필요한 곳에서 마음대로 사용하면 되겠습니다. 

(참고)
근데 위 코드 실행해보면 a를 입력하면 콘솔창에 아무것도 안뜨지 않습니까
aa를 입력하면 a만 콘솔창에 뜨고요.

왜냐면 state 변경함수 특징 때문인데 state 변경함수는 약간 늦게 처리됩니다.
전문용어로 async하게 (비동기적으로) 처리된다고 합니다. 
그리고 자바스크립트에선 늦게 처리되는 코드들은 잠깐 제쳐두고 바로 다음줄을 실행해줍니다. 
그래서 console.log(입력값) 이게 먼저 실행되어서 저렇게 나오는 것일 뿐입니다. 
그냥 실행 순서만 좀 다를 뿐 state변경은 어쨌든 잘 됩니다. 

오늘의 숙제 : 
1. input에 뭐 입력하고 발행버튼누르면
블로그에 글이 하나 추가되는 기능을 만들어보십시오. 
2. 글마다 옆에 삭제버튼 하나씩 만들어놓고 삭제버튼누르면 글이 없어지는 기능을 만들어보십시오.

(힌트)
- html 직접 만질 필요는 없습니다. 지금 글제목 state만 바꾸면 html도 알아서 바뀌지 않겠습니까 
- array에 자료를 추가하거나 삭제하는 문법은 모르면 구글찾아봐야지 생각한다고 나오는 것은 아닙니다. 